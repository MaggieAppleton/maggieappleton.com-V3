---
import { getCollection, type CollectionEntry } from "astro:content";
import { render } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Title2 from "../components/mdx/typography/Title2.astro";
import TitleWithCount from "../components/layouts/TitleWithCount.astro";
import PageWrapper from "../components/layouts/PageWrapper.astro";
import ProseWrapper from "../components/layouts/ProseWrapper.astro";
import Topics from "../components/layouts/Topics.astro";
import { Icon } from "astro-icon/components";
// Import components used in MDX files
import Title1 from "../components/mdx/typography/Title1.astro";
import Title3 from "../components/mdx/typography/Title3.astro";
import Title4 from "../components/mdx/typography/Title4.astro";
import TooltipLink from "../components/mdx/TooltipLink.astro";
import InternalTooltipLink from "../components/mdx/InternalTooltipLink.astro";
import Footnote from "../components/mdx/Footnote.astro";
import IntroParagraph from "../components/mdx/IntroParagraph.astro";
import ResourceBook from "../components/mdx/ResourceBook.astro";
import RemoteImage from "../components/mdx/RemoteImage.astro";
import BasicImage from "../components/mdx/BasicImage.astro";
import Spacer from "../components/mdx/Spacer.astro";

const smidgeons = await getCollection("smidgeons");

// Sort by date in reverse chronological order
const sortedSmidgeons = smidgeons.sort(
	(a, b) => b.data.startDate.getTime() - a.data.startDate.getTime(),
);

// Define components for MDX rendering
const components = {
	h1: Title1,
	h2: Title2,
	h3: Title3,
	h4: Title4,
	a: TooltipLink,
	img: BasicImage,
	InternalTooltipLink,
	IntroParagraph,
	Footnote,
	BasicImage,
	ResourceBook,
	RemoteImage,
	Spacer,
};

// Render all smidgeons content
const renderedSmidgeons = await Promise.all(
	sortedSmidgeons.map(async (smidgeon: CollectionEntry<"smidgeons">) => {
		const { Content } = await render(smidgeon);
		return { ...smidgeon, Content };
	}),
);
---

<Layout title="Smidgeons Stream | Maggie Appleton">
	<PageWrapper>
		<header class="header">
			<TitleWithCount posts={smidgeons}> Smidgeons Stream </TitleWithCount>
			<Title2> A stream of interesting links, papers, and tiny thoughts. </Title2>
		</header>

		<div class="smidgeons-list">
			{
				renderedSmidgeons.map((smidgeon, index) => (
					<>
						<article class="smidgeon-preview">
							<div class="metadata">
								<div class="date-permalink">
									<a href={`/${smidgeon.id}`} class="permalink" title="Permalink to this smidgeon">
										<div class="permalink-button">
											<Icon name="heroicons:link" size={16} />
										</div>
									</a>
									<time datetime={smidgeon.data.startDate.toISOString()}>
										{smidgeon.data.startDate.toLocaleDateString("en-US", {
											year: "numeric",
											month: "long",
											day: "numeric",
										})}
									</time>
								</div>
								{smidgeon.data.topics && <Topics topics={smidgeon.data.topics} />}
							</div>
							<div class="content">
								{/* External Link Format */}
								{smidgeon.data.external && (
									<a href={smidgeon.data.external.url} target="_blank" rel="noopener noreferrer">
										<div class="reference-card">
											<h1 class="content-header">
												{smidgeon.data.title}
												<Icon name="heroicons:arrow-top-right-on-square" size={16} />
											</h1>
											{smidgeon.data.external.author && (
												<p class="byline">
													<Icon name="heroicons:user" size={14} />
													{smidgeon.data.external.author}
												</p>
											)}
										</div>
									</a>
								)}

								{/* Academic Paper Format */}
								{smidgeon.data.citation && (
									<a href={smidgeon.data.citation.url} target="_blank" rel="noopener noreferrer">
										<div class="reference-card">
											<div class="citation-header">
												<h1 class="content-header">
													{smidgeon.data.title}{" "}
													<Icon name="heroicons:arrow-top-right-on-square" size={16} />
												</h1>
												<div class="citation-metadata">
													<p class="byline">
														<Icon name="heroicons:users" size={14} />
														{smidgeon.data.citation.authors.join(", ")}
													</p>
													<p class="journal-info byline">
														<Icon name="heroicons:academic-cap" size={14} />
														{smidgeon.data.citation.journal} ({smidgeon.data.citation.year})
													</p>
												</div>
											</div>
										</div>
									</a>
								)}

								<ProseWrapper>
									<smidgeon.Content components={components} />
								</ProseWrapper>
							</div>
						</article>
						{index !== renderedSmidgeons.length - 1 && (
							<div class="smidgeon-divider">
								<Icon name="budding" size={20} />
								<Icon name="budding" size={20} />
								<Icon name="budding" size={20} />
							</div>
						)}
					</>
				))
			}
		</div>
	</PageWrapper>
</Layout>

<style>
	.content-header {
		font-family: var(--font-body);
		font-size: var(--font-size-base);
		font-weight: 400;
		line-height: var(--leading-base);
		margin: 0;
		margin-bottom: var(--space-2xs);
		padding: 0;
		display: flex;
		align-items: flex-start;
		gap: var(--space-2xs);
	}

	.content-header svg,
	.byline svg {
		flex-shrink: 0;
		position: relative;
		top: 7px;
	}

	.link-title {
		align-items: start;
		gap: var(--space-2xs);
		font-family: var(--font-sans);
		font-weight: 600;
		color: var(--color-gray-800);
		text-decoration: none;
		transition: all 0.3s ease;
		display: flex;
	}

	.byline {
		display: flex;
		align-items: flex-start;
		gap: var(--space-2xs);
		font-family: var(--font-sans);
		font-size: var(--font-size-sm);
		color: var(--color-gray-600);
		font-weight: 400;
	}

	time {
		font-size: var(--font-size-sm);
		color: var(--color-gray-600);
		font-family: var(--font-sans);
	}

	.header {
		margin: 0 auto var(--space-xl);
		max-width: 840px;
	}

	.smidgeons-list {
		display: flex;
		flex-direction: column;
		gap: var(--space-2xl);
	}

	.smidgeon-preview {
		display: grid;
		grid-template-columns: 200px minmax(0, 800px);
		gap: var(--space-l);
		margin-top: var(--space-xs);
	}

	.reference-card {
		padding: 1.25rem 1.5rem;
		border-radius: 0.5rem;
		border: 1px solid var(--color-gray-300);
		width: 100%;
		box-shadow: var(--box-shadow-sm);
		margin-bottom: var(--space-s);
	}

	.reference-card:hover {
		background-color: white;
		transition: all 0.4s ease;
		cursor: pointer;
	}

	.metadata {
		display: flex;
		flex-direction: column;
		margin-top: var(--space-2xs);
		gap: var(--space-xs);
	}

	.metadata :global(.styled-list) {
		margin: 0;
	}

	.date-permalink {
		display: flex;
		align-items: center;
		gap: var(--space-2xs);
	}

	.permalink {
		color: var(--color-gray-600);
		transition: all 0.2s ease;
	}

	.permalink:hover {
		color: var(--color-black);
	}

	.permalink-button {
		width: 24px;
		height: 24px;
		border-radius: 0.25rem;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.permalink-button:hover {
		background-color: var(--color-gray-100);
		transition: all 0.2s ease;
		cursor: pointer;
	}

	.content {
		border-bottom: 1px solid var(--color-gray-300);
		font-family: var(--font-serif);
		font-size: var(--font-size-base);
		line-height: 1.6;
		color: var(--color-gray-800);
	}

	.content :global(.prose-wrapper > p) {
		padding: 0 1.5rem;
		margin-bottom: var(--space-xs);
	}

	.content:last-child {
		border-bottom: none;
	}

	.link-title [data-icon] {
		flex-shrink: 0;
		position: relative;
		top: 6px;
	}

	.link-title:hover {
		color: var(--color-medium-sea-blue);
	}

	.smidgeon-divider {
		display: flex;
		justify-content: center;
		color: var(--color-sea-blue);
		gap: 4px;
	}

	@media (max-width: 768px) {
		.smidgeon-preview {
			grid-template-columns: 1fr;
			gap: var(--space-s);
		}

		.metadata {
			flex-direction: row;
			flex-wrap: wrap;
			align-items: center;
		}

		.content :global(.prose-wrapper > p) {
			padding: 0;
		}
	}
</style>
