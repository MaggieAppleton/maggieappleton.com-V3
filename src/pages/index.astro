---
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";
import Layout from "../layouts/Layout.astro";
import Spacer from "../components/mdx/Spacer.astro";
import Title2 from "../components/mdx/typography/Title2.astro";
import Title1 from "../components/mdx/typography/Title1.astro";
import SmallTitle2 from "../components/mdx/typography/SmallTitle2.astro";
import EssayCard from "../components/cards/EssayCard.astro";
import BookCard from "../components/cards/BookCard.astro";
import PatternCard from "../components/cards/PatternCard.astro";
import UnderlineHoverLink from "../components/mdx/UnderlineHoverLink.astro";

const essays = await getCollection(
	"essays",
	({ data }) => data.featured === true
);
const notes = await getCollection("notes", ({ data }) => !data.draft);
const patterns = await getCollection("patterns", ({ data }) => !data.draft);
const books = await getCollection("books");

const sortedEssays = essays
	.slice(0, 4)
	.sort((a, b) => new Date(b.data.updated).getTime() - new Date(a.data.updated).getTime());

const sortedNotes = notes.sort(
	(a, b) => new Date(b.data.updated).getTime() - new Date(a.data.updated).getTime()
);

const sortedPatterns = patterns
	.slice(0, 8)
	.sort((a, b) => new Date(b.data.updated).getTime() - new Date(a.data.updated).getTime());
---

<Layout title="Maggie Appleton">
	<header style="display: flex; flex-direction: column; gap: var(--space-2xs);">
		<Title1 style="margin-top: var(--space-m); max-width: 1100px;">
			<b>Maggie </b>
			makes visual essays about programming, design, and anthropology.
		</Title1>
		<SmallTitle2>
			Designer, anthropologist, and mediocre developer
			<br />
			Currently design engineering at{" "}
			<b style="margin: 0 0.6rem 0 0.3rem">
				<UnderlineHoverLink href="https://normally.com">
					Normally
				</UnderlineHoverLink>
			</b>
		</SmallTitle2>
	</header>

	<Spacer />

	<section>
		<a href="/garden">
			<Title2 style="font-size: var(--font-size-2xl);"> The Garden </Title2>
		</a>
		<div class="subheader">
			A digital garden is a collection of imperfect notes, essays, and ideas
			growing slowly over time.{" "}
			<a href="/garden-history" class="readmore-link">
				Learn more
				<Icon name="heroicons:arrow-right" size={18} />
			</a>
		</div>
	</section>

	<section class="garden-section">
		<section style="grid-area: essays;">
			<a href="/essays">
				<h3 class="section-header">
					Essays
					<Icon name="heroicons:arrow-right" size={18} />
				</h3>
			</a>
			<div class="subheader">
				Opinionated, longform narrative writing with an agenda
			</div>
			<div
				style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); grid-gap: var(--space-2xs);"
			>
				{
					sortedEssays.map((essay) => (
						<EssayCard
							id={essay.slug}
							slug={essay.slug}
							cover={essay.data.cover}
							title={essay.data.title}
							growthStage={essay.data.growthStage}
							date={essay.data.updated}
							description={essay.data.description}
						/>
					))
				}
			</div>
		</section>

		<section style="grid-area: notes;">
			<a href="/notes">
				<h3 class="section-header">
					Notes
					<Icon name="heroicons:arrow-right" size={18} />
				</h3>
			</a>
			<div class="subheader">
				Loose, unopinionated notes on things I don't entirely understand yet.
			</div>
			{
				sortedNotes.slice(0, 12).map((note) => (
					<a href={`/${note.slug}`}>
						<div class="index-note-card">
							{note.data.growthStage && (
								<GrowthIcon growthStage={note.data.growthStage} />
							)}
							<h3>{note.data.title}</h3>
						</div>
					</a>
				))
			}
		</section>

		<section style="grid-area: patterns;">
			<a href="/patterns">
				<h3 class="section-header">
					Patterns
					<Icon name="heroicons:arrow-right" size={18} />
				</h3>
			</a>
			<div class="subheader">
				Design patterns gathered from my own observations and research.
			</div>
			<div style="margin-left: -1.4rem;">
				{
					sortedPatterns.map((pattern) => (
						<PatternCard
							slug={pattern.slug}
							title={pattern.data.title}
							growthStage={pattern.data.growthStage}
							date={pattern.data.updated}
							description={pattern.data.description}
						/>
					))
				}
			</div>
		</section>

		<section style="grid-area: library;">
			<a href="/library">
				<h3 class="section-header">
					Library
					<Icon name="heroicons:arrow-right" size={18} />
				</h3>
			</a>
			<div class="subheader">
				Books I've read and books I like the idea of having read.
			</div>
			<div
				style="display: grid; grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); grid-gap: var(--space-2xs);"
			>
				{
					books
						.slice(0, 8)
						.map((book) => (
							<BookCard
								small
								subtitle={book.data.subtitle}
								cover={book.data.cover}
								title={book.data.title}
								author={book.data.author}
								link={book.data.link}
							/>
						))
				}
			</div>
		</section>
	</section>
</Layout>

<style>
	.readmore-link {
		display: inline-flex;
		align-items: center;
		font-weight: 400;
	}

	.readmore-link .icon {
		transition:
			color 0.3s ease-in-out,
			margin-left 0.2s ease-in-out;
		position: relative;
		top: 1px;
		margin-left: var(--space-3xs);
	}

	.readmore-link:hover {
		transition:
			color 0.3s ease-in-out,
			margin-left 0.2s ease-in-out;
		color: var(--color-bright-crimson);
		cursor: pointer;
	}

	.readmore-link:hover .icon {
		margin-left: var(--space-2xs);
		color: var(--color-sea-blue);
	}

	.index-note-card {
		display: flex;
		padding: var(--space-xs) 0 1.2rem;
		border-bottom: 1px solid var(--color-tinted-cream);
		transition: all 0.3s ease-in-out;
	}

	.index-note-card .icon {
		position: relative;
		top: 5px;
		flex-shrink: 0;
	}

	.index-note-card h3 {
		color: var(--color-gray-800);
		transition: all 0.3s ease-in-out;
		font-family: var(--font-body);
		font-size: var(--font-size-base);
		font-weight: 400;
		line-height: var(--leading-snug);
		margin-left: var(--space-xs);
		transition: all 0.3s ease-in-out;
	}

	.index-note-card:hover {
		border-bottom: 1px solid var(--color-sea-blue);
		transform: scale3d(1.02, 1.02, 1.02);
	}

	.index-note-card:hover h3 {
		color: var(--color-crimson);
	}

	.garden-section {
		margin: var(--space-xl) 0 var(--space-s);
		display: grid;
		grid-gap: var(--space-xl);
		grid-template-columns: 1fr 1fr 1fr;
		grid-template-rows: auto;
		grid-template-areas:
			"essays essays notes"
			"patterns library library";
	}

	@media (max-width: 768px) {
		.garden-section {
			grid-gap: var(--space-s);
		}
	}

	@media (max-width: 640px) {
		.garden-section {
			grid-template-columns: 1fr;
			grid-gap: var(--space-l);
			grid-template-rows: auto;
			grid-template-areas: "essays" "notes" "patterns" "library";
		}
	}

	.section-header {
		font-family: var(--font-sans);
		font-size: var(--font-size-base);
		font-weight: 600;
		color: var(--color-gray-800);
		display: flex;
		align-items: center;
		margin-bottom: var(--space-3xs);
	}

	.section-header .icon {
		transition:
			color 0.3s ease-in-out,
			margin-left 0.2s ease-in-out;
		position: relative;
		top: 0px;
		margin-left: var(--space-3xs);
	}

	.section-header:hover {
		transition:
			color 0.3s ease-in-out,
			margin-left 0.2s ease-in-out;
		color: var(--color-bright-crimson);
		cursor: pointer;
	}

	.section-header:hover .icon {
		margin-left: var(--space-2xs);
		color: var(--color-sea-blue);
	}

	.subheader {
		font-family: var(--font-sans);
		font-size: var(--font-size-base);
		font-weight: 300;
		color: var(--color-gray-800);
		margin-bottom: var(--space-m);
	}
</style>
