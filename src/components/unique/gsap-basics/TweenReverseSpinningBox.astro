---

---

<div class="box" id="reverse-spinning-box"></div>

<script>
	let currentObserver: IntersectionObserver | null = null;

	function initializeObserver() {
		// Clean up existing observer
		if (currentObserver) {
			currentObserver.disconnect();
			currentObserver = null;
		}

		const box = document.getElementById("reverse-spinning-box");
		if (!box) return;

		currentObserver = new IntersectionObserver(
			([entry]) => {
				if (entry.isIntersecting) {
					box.classList.add("animate");
				}
			},
			{
				threshold: 0.2,
				rootMargin: "-30% 0px",
			},
		);

		currentObserver.observe(box);
	}

	function cleanup() {
		if (currentObserver) {
			currentObserver.disconnect();
			currentObserver = null;
		}
	}

	// Initialize on first load
	initializeObserver();

	// Reinitialize after view transitions
	document.addEventListener("astro:page-load", initializeObserver);

	// Cleanup on page leave
	document.addEventListener("astro:before-swap", cleanup);
</script>

<style>
	.box {
		width: 100px;
		height: 100px;
		margin: 2em;
		border-radius: 4px;
		background: #2d2a55;
		/* Start from the transformed state */
		transform: translateX(20vw) rotate(360deg);
		transition: transform 0.8s ease-out;
		will-change: transform;
	}

	.box.animate {
		/* Animate back to initial state */
		transform: translateX(0) rotate(0deg);
	}
</style>
