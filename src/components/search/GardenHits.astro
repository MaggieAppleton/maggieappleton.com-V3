---
import MasonryGrid from "../layouts/MasonryGrid.astro";
import EssayCard from "../cards/EssayCard.astro";
import NoteCard from "../cards/NoteCard.astro";
import PatternCard from "../cards/PatternCard.astro";
import PodcastCard from "../cards/PodcastCard.astro";
import TalkCard from "../cards/TalkCard.astro";

interface Post {
	id: string;
	collection: string;
	data: {
		type?: string;
		updated: string;
		title?: string;
		description?: string;
		growthStage?: string;
		cover?: string;
		podcastName?: string;
		episodeName?: string;
		url?: string;
		conferences?: string[];
		coverImage?: {
			src: string;
			width: number;
			height: number;
			format: string;
		};
	};
}

const { allPostData } = Astro.props;

const sortedPosts = allPostData.sort((a: Post, b: Post) => {
	const dateA = new Date(a.data.updated).getTime();
	const dateB = new Date(b.data.updated).getTime();
	return dateB - dateA;
});
---

<div id="hits-container">
	<MasonryGrid>
		<div class="grid-sizer"></div>
		{
			sortedPosts.map((post: Post, i) => {
				console.log(
					"Processing post:",
					post.id,
					"Type:",
					post.data.type,
					"Collection:",
					post.collection
				);

				const isPodcast =
					post.data.type === "podcast" || post.collection === "podcasts";

				if (!post) return null;

				const commonProps = {
					key: i,
					id: post.id,
					slug: post.id,
					date: post.data.updated,
				};

				return (
					<div class="grid-item">
						{isPodcast && (
							<PodcastCard
								{...commonProps}
								podcastName={post.data.podcastName}
								episodeName={post.data.episodeName}
								url={post.data.url}
								podcastCover={post.data.coverImage}
							/>
						)}
						{post.data.type === "essay" && (
							<EssayCard
								{...commonProps}
								cover={post.data.cover}
								title={post.data.title}
								growthStage={post.data.growthStage}
								description={post.data.description}
							/>
						)}
						{post.data.type === "note" && (
							<NoteCard
								{...commonProps}
								title={post.data.title}
								growthStage={post.data.growthStage}
								description={post.data.description}
							/>
						)}
						{post.data.type === "pattern" && (
							<PatternCard
								{...commonProps}
								title={post.data.title}
								growthStage={post.data.growthStage}
								description={post.data.description}
							/>
						)}
						{post.data.type === "talk" && (
							<TalkCard
								{...commonProps}
								title={post.data.title}
								description={post.data.description}
								cover={post.data.cover}
								conferences={post.data.conferences}
							/>
						)}
					</div>
				);
			})
		}
	</MasonryGrid>
</div>
